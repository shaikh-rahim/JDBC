package com.qsp.shop.view;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Scanner;

import javax.sound.midi.SysexMessage;

import com.qsp.shop.controller.ShopController;
import com.qsp.shop.model.Product;

public class ShopView {
	static Scanner myInput=new Scanner(System.in);
	static Product product =new Product();
	static ShopController shopController=new ShopController();


	public static void main(String[] args) {
		do {

			System.out.println("\nWhich of the following operations do you want to perform on the Product database: ");
			System.out.print("1. Add product\n2. Remove Product\n3. Update Product Details \n4. Fetch Record \n5. Read record \n0. exit");
			System.out.print("\nEnter digit respective to desired option : ");

			int userInput=myInput.nextInt();
			myInput.nextLine();

			switch(userInput) {

			case 0:
				myInput.close();
				System.out.println("-------------EXIT--------------------");
				System.exit(0);
				break;

			case 1:  

				byte count=0;

				System.out.println("If You want to add single product Press 0 or If You want to add multiple product Press 1");
				count=myInput.nextByte();

				if(count==0) {
					System.out.print("Enter product id : ");
					int i_p_id=myInput.nextInt();
					myInput.nextLine();
					System.out.print("Enter product name : ");
					String i_p_name=myInput.nextLine();
					System.out.print("Enter product price : ");
					int i_p_price=myInput.nextInt();
					myInput.nextLine();
					System.out.print("Enter product quantity : ");
					int i_p_quantity=myInput.nextInt();
					myInput.nextLine();

					boolean i_p_availability=false;
					if (i_p_quantity>0) {
						i_p_availability=true;
					} 
					if((shopController.addProoduct(i_p_id, i_p_name, i_p_price, i_p_quantity, i_p_availability))!=0) {
						System.out.println("Product added");
					}else {
						System.out.println("Product not added");
					}
				}else {
					boolean toContinue = true;
					ArrayList<Product> products = new ArrayList<Product>();
					do {
						Product product = new Product();
						System.out.println("Enter Product id : ");
						product.setP_id(myInput.nextInt());
						myInput.nextLine();
						System.out.println("Enter Product Name : ");
						product.setP_name(myInput.nextLine());
						System.out.println("Enter Product Price : ");
						product.setP_price(myInput.nextInt());
						myInput.nextLine();
						System.out.println("Enter Product Quantity : ");
						int quantity = myInput.nextInt();
						product.setP_quantity(myInput.nextInt());
						myInput.nextLine();

						boolean i_p_availability = false;
						if (quantity > 0) {
							i_p_availability = true;
						}
						product.setP_availability(i_p_availability);
						products.add(product);
						System.out.println("Press 1 for continue adding product, Press 0 for stop adding product");
						int toAdd = myInput.nextInt();
						if (toAdd == 0) {
							toContinue = false;
						}
					} while (toContinue);
				}
				
				break;
			case 2:   
				System.out.println("Enter product id to remove : ");
				int nextInt = myInput.nextInt();
				myInput.nextLine();

				if(shopController.removeProduct(nextInt)!=0) {
					System.out.println("Product Removed");
				}else {
					System.out.println("Product with in id does not exist no remove opration performed");
				}

				break;
			case 3:   

				System.out.print("Enter product id to update: ");
				int productIdToUpdate=myInput.nextInt();
				myInput.nextLine();


				ResultSet product = shopController.fetchProduct(productIdToUpdate);
				
				try {
					if (product.next()) {
						System.out.println("What you want to update");
						System.out.println("1.Name\n2.price\n3.Quantity");
						System.out.println("Enter number respective to desired option");
						byte updateOption=myInput.nextByte();
						myInput.nextLine();
						switch (updateOption) {
						case 1:
							System.out.println("Enter name to update : ");
							String nameToUpdate=myInput.nextLine();
							if (shopController.updateProductName(productIdToUpdate, nameToUpdate)!=0) {
								System.out.println("Record Updated");
							}
							else {
								System.out.println("Record not update");
							}
							break;
						case 2:
							System.out.println("Enter price to update : ");
							int priceToUpdate=myInput.nextInt();
							myInput.nextLine();
							if (shopController.updateProductPrice(productIdToUpdate, priceToUpdate)!=0) {
								System.out.println("Record Updated");
							}
							else {
								System.out.println("Record not update");
							}
							break;
						case 3:
							System.out.println("Enter quantity to update : ");
							break;
							
						default:
							break;
						}
					} else {
						System.out.println("product with given id does not exist,update operation can not be per");
					}
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

				break;
			case 4:   

				System.out.print("Enter product id : of product you want ");
				int productIdtoFind=myInput.nextInt();
				myInput.nextLine();

				ResultSet fetchProduct = shopController.fetchProduct(productIdtoFind);
				try {
					boolean next =fetchProduct.next();

					if (next) {
						System.out.println("PRODUCT DETAILS");
						System.out.println("Id : " + fetchProduct.getInt(1));
						System.out.println("Name : " + fetchProduct.getString(2));
						System.out.println("Price : " + fetchProduct.getInt(3));
						System.out.println("Quantity : " + fetchProduct.getInt(4));
						if (fetchProduct.getBoolean(5)) {
							System.out.println("Availability : Available");
						} else {
							System.out.println("Availability : Not Available");
						}

					} else {
						System.out.println("Product with id : " + "does not exist.");
					}
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}

				break;

			}

		}while(true);
	}



}